@using Data.Entities
@using Kendo.Mvc.UI
@model Magazin.Models.DetailViewModel
@{
    string toolbarName = "tlbr_" + Guid.NewGuid().ToString("N");
    string gridId = "grd_" + Guid.NewGuid().ToString("N");
}


<script>
    window['@Model.Id'] = new DetailViewForm('@Model.Id');
    window['@gridId'] = new GridControl('@gridId');
    (function () {
        var form = window['@Model.Id'];

        form.save = function () {

            var viewModel = form.getModel();

            if (viewModel.Processed) {
                return;
            }

            var data = JSON.stringify({ inCome: viewModel });

            $.ajax({
                type: "POST",
                url: "@Url.Action("AddInCome", "InCome")",
                data: data,
                dataType: "json",
                contentType: "application/json",
                success: function (result) {
                    if (result.error) {

                    } else {
                        form.getWindow().close();
                    }
                }
            });
        };

        form.cancel = function () {
            form.getWindow().close();
        }

        form.add = function () {
            var viewModel = form.getModel();

            if (viewModel.Processed) {
                return;
            }

            var params = {
                contentUrl: "@Url.Action("GetIncomeEntityDetailView", "InCome")",
                title: 'Позиция'
            }

            var callback = function(e) {
                if (e.sender.Model) {
                    if (!viewModel.Incoms) {
                        viewModel.set('Incoms', []);
                    }

                    viewModel.Incoms.push(e.sender.Model);
                }
            }

            UiApi.openModalWindow(params, callback);
        };

        form.precessInCome = function () {
            var ajaxParams = {
                id: '@Model.EntityId'
            }

            $.ajax({
                url: '@Url.Action("ProcessIncome")',
                type: "GET",
                data: ajaxParams,
                success: function (result) {
                    console.log(result);
                    if(result === "ok"){}
                },
                dataType: "json",
                contentType: 'application/json'
            });
        };

        form.edit = function() {
            var viewModel = form.getModel();

            if (viewModel.Processed) {
                return;
            }

            var grid = window['@gridId'];

            var dataItem = grid.getSelectedItem();

            var params = {
                contentUrl: "@Url.Action("GetIncomeEntityDetailView", "InCome")" + "?id=" + dataItem.Id,
                title: 'Позиция'
            }

            var callback = function (e) {
                if (e.sender.Model) {
                    if (!viewModel.Incoms) {
                        viewModel.set('Incoms', []);
                    }

                    viewModel.Incoms.push(e.sender.Model);
                }
            }

            UiApi.openModalWindow(params, callback);
        };


    })();

</script>


<div id="@Model.Id">
    <div id="formtoolbar">
    </div>
    <h3>Позиции</h3>
    @(Html.Kendo().ToolBar()
              .Name(toolbarName)
              .Items(toolbar =>
              {
                  toolbar.Add().Type(CommandType.ButtonGroup).Buttons(btns =>
                  {
                      btns.Add().Text("Добавить").ShowText(ShowIn.Overflow).SpriteCssClass("mdi mdi-plus").HtmlAttributes(new { title = "Создать" }).Click(Model.Id + ".add");
                      btns.Add().Text("Редактировать").ShowText(ShowIn.Overflow).SpriteCssClass("mdi mdi-pencil").HtmlAttributes(new { title = "Редактировать" }).Click(Model.Id + ".edit");
                      btns.Add().Text("Удалить").ShowText(ShowIn.Overflow).SpriteCssClass("mdi mdi-close").HtmlAttributes(new { title = "Удалить" }).Click(Model.Id + ".remove");
                  });
              })
    )

    <div id="@gridId" style="height: 100%;"
         data-role="grid"
         data-selectable="true"
         data-columns="[
                { 'field': 'Product.Title', 'title' : 'Продукт'},
                { 'field': 'Count', 'title' : 'Колчество' }]"
         data-bind="source: Incoms">

    </div>


    <div>

    </div>
</div>

<script>
    $(function () {

        var form = window['@Model.Id'];

        var ajaxParams = {
            id: '@Model.EntityId'
        }

        $.ajax({
            url: '@Url.Action("GetIncome")',
            type: "GET",
            data: ajaxParams,
            success: function (result) {
                var viewModel = new kendo.data.ObservableObject(result);
                form.setModel(viewModel);
            },
            dataType: "json",
            contentType: 'application/json'
        });

        $('#formtoolbar').kendoToolBar({
            items: [
            {
                type: "buttonGroup",
                buttons: [
                { type: "button", text: "Провести", click: form.precessInCome, attributes: { "class": "primary", "title": "Провести", "data_popup": "bottom" } }]
            },
            {
                attributes: { "style": "float : right;" },
                type: "buttonGroup",
                buttons: [
                { type: "button", text: "Сохранить", click: form.save, attributes: { "class": "primary", "title": "Сохранить", "data_popup": "bottom" } }]
            }]
        });


        var $toolbar = $('#@toolbarName');
        $toolbar.find(".k-sprite").removeClass("k-sprite");


        var resize = function () {
            var wh = $(form.getWindow().element).height() - 190;

            var grid = window['@gridId'];
            grid.resize(wh);
        }

        resize();


        form.getWindow().resize = function () {
            resize();
        };

    });
</script>


