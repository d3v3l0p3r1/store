@using Data.Entities
@using Kendo.Mvc.UI
@{
    string wrapId = "wrp_" + Guid.NewGuid().ToString("N");
    string toolbarName = "tlbr_" + Guid.NewGuid().ToString("N");
    string gridId = "grid_" + Guid.NewGuid().ToString("N");
}



<script>
    window['@wrapId'] = new DetailViewForm('@wrapId');

    (function() {
        var form = window['@wrapId'];

        var model = @Html.Raw(Json.Encode(Model));

        var viewModel = new kendo.data.ObservableObject(model);

        form.setModel(viewModel);

        form.save = function() {
            var data = JSON.stringify({product: viewModel});

            $.ajax({
                type: "POST",
                url: "@Url.Action("AddInCome","InCome")",
                data: data,
                dataType: "json",
                contentType: "application/json",
                success: function(result) {
                    if (result.error) {

                    } else {
                        form.getWindow().close();
                    }
                }
            });
        };

        form.add = function() {
            var params = {
                contentUrl: "@Url.Action("GetIncomeEntity","InCome")",
                title: 'Позиция'
            }

            var callback = function(e) {
                debugger;
                if (!viewModel.Incoms) {
                    viewModel.Incoms = [];
                }
                viewModel.Incoms.push(e.sender.Model);
            }

            UiApi.openModalWindow(params, callback);
        };

        form.cancel = function() {
            form.getWindow().close();
        }

    })();

</script>


<div id="@wrapId">
    <div id="formtoolbar" style="background-color: #444">
    </div>
    <h3>Добавте позиции</h3>

    <div>
        @(Html.Kendo().ToolBar()
              .Name(toolbarName)
              .Items(toolbar =>
              {
                  toolbar.Add().Type(CommandType.ButtonGroup).Buttons(btns =>
                  {
                      btns.Add().Text("Добавить").ShowText(ShowIn.Overflow).SpriteCssClass("mdi mdi-plus").HtmlAttributes(new { title = "Создать" }).Click(wrapId + ".add");
                      btns.Add().Text("Редактировать").ShowText(ShowIn.Overflow).SpriteCssClass("mdi mdi-pencil").HtmlAttributes(new { title = "Редактировать" }).Click(wrapId + ".edit");
                      btns.Add().Text("Удалить").ShowText(ShowIn.Overflow).SpriteCssClass("mdi mdi-close").HtmlAttributes(new { title = "Удалить" }).Click(wrapId + ".remove");
                  });
              })
        )
    </div>

    <div id="@gridId"
         data-role="grid"         
         data-columns="[
                { 'field': 'Title', 'width': 270 },
                { 'field': 'Count' }]"
         data-bind="source: products"></div>


    <div>

    </div>
</div>



<script>
    $(function () {

        $('#tabstrip').kendoTabStrip();

        $('#formtoolbar').kendoToolBar({
            items:[
            {
                attributes : {"style" : "float : right;"},
                type: "buttonGroup",
                buttons: [
                    { type: "button", text: "Сохранить", attributes: {"class" : "primary" , "title" : "Сохранить" , "data_popup" : "bottom"}} ]
            }]
        });

        var $toolbar = $('#@toolbarName');
        $toolbar.find(".k-sprite").removeClass("k-sprite");

    });
</script>
